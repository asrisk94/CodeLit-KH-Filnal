<!-- <?xml version="1.0" encoding="UTF-8" ?> -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lecture">
	<select id="selectCategoryList" resultMap="categoryMap">
		select
			lec_cat_no,
			lec_cat_name
		from
			lecture_category
		order by
			lec_cat_no
	</select>


	<resultMap type="map" id="categoryMap">
		<id column="lec_cat_no" property="no" javaType="integer"/>
		<result column="lec_cat_name" property="name" javaType="string"/>
	</resultMap>

	<insert id="insertLecture">
		insert into
			lecture
		values (
			seq_lec_no.nextval,
			#{refLecCatNo},
			#{refMemberId},
			#{lectureName},
			#{lectureType},
			#{lectureIntro},
			#{lectureThumbOrigin},
			#{lectureThumbRenamed},
			#{lecturePrice},
			default,
			#{lectureGuideline}
		)
		<selectKey resultType="_int" keyProperty="lectureNo" order="AFTER">
			select
				seq_lec_no.currval
			from
				dual
		</selectKey>
	</insert>

	<insert id="insertLecturePart">
		insert into
			lecture_part
		values (
			seq_lec_part_no.nextval,
			#{refLectureNo},
			#{lecturePartTitle}
		)
		<selectKey resultType="_int" keyProperty="lecturePartNo" order="AFTER">
			select
				seq_lec_part_no.currval
			from
				dual
		</selectKey>
	</insert>

	<insert id="insertLectureChapter">
		insert into
			lecture_chapter
		values (
			seq_lec_chapter_no.nextval,
			#{refLecPartNo},
			#{lecChapterTitle},
			#{lecChapterVideo},
			#{lecChapterReVideo}
		)
	</insert>

	<select id="selectLectureList" resultType="lecture">
		select
			l.*,
			t.teacher_name,
			round((select avg(lec_assessment) from lecture_comment where ref_lecture_no = l.lecture_no), 1) "avg_lec_assessment",
			(select count(*) from pick where ref_member_id = #{memberId} and ref_lecture_no = l.lecture_no) "picked",
			(select count(*) from basket where ref_member_id = #{memberId} and ref_lecture_no = l.lecture_no) "basketed"
		from
			lecture l
				join teacher t
			on l.ref_member_id = t.ref_member_id
		<where>
		    l.lecture_accept_yn = 'Y'
		<!--
			if 태그에서 파라미터를 getter로 가져오기 때문에 getter가 없는
			기본형변수나 String객체 등을 파라미터로 넘겼을때는 _parameter로 사용해야 함.
		-->
		<if test="catNo gt 0">
			and l.ref_lec_cat_no = #{catNo}
		</if>
		<if test="searchKeyword != null and searchKeyword != ''">
			and (l.lecture_name like '%' || #{searchKeyword} || '%'
			or t.teacher_name like '%' || #{searchKeyword} || '%')
		</if>
		</where>
		order by
		    l.lecture_no
	</select>

	<select id="getTotalContents" resultType="_int">
		select
			count(*)
		from
			lecture l
				join teacher t
			on l.ref_member_id = t.ref_member_id
		<where>
		    l.lecture_accept_yn = 'Y'
		<if test="catNo gt 0">
			and l.ref_lec_cat_no = #{catNo}
		</if>
		<if test="searchKeyword != null and searchKeyword != ''">
			and (l.lecture_name like '%' || #{searchKeyword} || '%'
			or t.teacher_name like '%' || #{searchKeyword} || '%')
		</if>
		</where>
	</select>

	<select id="selectMyLecture" resultType="lecture">
	select rownum, l.*
	from (
           select
                lecture_name
           from
               lecture
           <where>
                lecture_accept_yn = 'Y' and ref_member_id = #{id}
           </where>
       ) l
    　　　
	where rownum <![CDATA[ <= ]]> 3
	</select>

	<select id="selectOneLecture" resultMap="lectureCollectMap">
		select
		    l.*, p.*, c.*, t.*,
		    round((select avg(lec_assessment) from lecture_comment where ref_lecture_no = l.lecture_no), 1) "avg_lec_assessment"
		from
		    lecture l
		        left join lecture_part p
		            on l.lecture_no = p.ref_lecture_no
		        left join lecture_chapter c
		            on p.lecture_part_no = c.ref_lec_part_no
		        left join teacher t
		        	on l.ref_member_id = t.ref_member_id
		where
			lecture_no = #{no}
	</select>
	<resultMap type="lecture" id="lectureCollectMap">
		<id column="lecture_no" property="lectureNo"/>
		<result column="ref_lec_cat_no" property="refLecCatNo"/>
		<result column="ref_member_id" property="refMemberId"/>
		<result column="lecture_name" property="lectureName"/>
		<result column="lecture_type" property="lectureType"/>
		<result column="lecture_intro" property="lectureIntro"/>
		<result column="lecture_thumb_origin" property="lectureThumbOrigin"/>
		<result column="lecture_thumb_renamed" property="lectureThumbRenamed"/>
		<result column="lecture_price" property="lecturePrice"/>
		<result column="lecture_accept_yn" property="lectureAcceptYn"/>
		<result column="lecture_guideline" property="lectureGuideline"/>
		<result column="avg_lec_assessment" property="avgLecAssessment"/>

		<association property="teacher" javaType="teacher">
			<id column="ref_member_id" property="refMemberId"/>
			<result column="teacher_name" property="teacherName"/>
			<result column="teacher_phone" property="teacherPhone"/>
			<result column="ref_lec_cat_no" property="refLecCatNo"/>
			<result column="teacher_introduce" property="teacherIntroduce"/>
			<result column="teacher_link" property="teacherLink"/>
			<result column="teacher_bank" property="teacherBank"/>
			<result column="teacher_account" property="teacherAccount"/>
			<result column="teacher_acc_name" property="teacherAccName"/>
		</association>

		<collection property="partList" ofType="lecturePart">
			<id column="lecture_part_no" property="lecturePartNo"/>
			<result column="ref_lecture_no" property="refLectureNo"/>
			<result column="lecture_part_title" property="lecturePartTitle"/>

			<collection property="chepterList" ofType="lectureChapter">
				<id column="lec_chapter_no" property="lecChapterNo"/>
				<result column="ref_lec_part_no" property="refLecPartNo"/>
				<result column="lec_chapter_title" property="lecChapterTitle"/>
				<result column="lec_chapter_video" property="lecChapterVideo"/>
				<result column="lec_chapter_re_video" property="lecChapterReVideo"/>
			</collection>
		</collection>
	</resultMap>

	<select id="selectLectureCmtList" resultType="map">
		select
			ref_lecture_no "refLectureNo",
			ref_member_id "refMemberId",
			lec_assessment "lecAssessment",
			lec_comment "lecComment",
			lec_cmt_enroll_date "lecCmtEnrollDate"
		from
			lecture_comment
		where
			ref_lecture_no = #{no}
		order by
			lec_cmt_enroll_date desc
	</select>

	<select id="mainLecture" resultType="lecture">

	select
		  rownum,
    	  l.*,
    	  round((select avg(lec_assessment) from lecture_comment where ref_lecture_no = l.lecture_no), 1) "avg_lec_assessment",
   		 (select teacher_name from teacher where ref_member_id = l.ref_member_id) "teacher_name",
    	 (select count(*) from pick where ref_member_id = #{memberId} and ref_lecture_no = l.lecture_no) "picked",
    	 (select count(*) from basket where ref_member_id = #{memberId} and ref_lecture_no = l.lecture_no) "basketed"
	from lecture l
	<where>
    	lecture_accept_yn = 'Y' and rownum <![CDATA[ <= ]]> 8
    </where>
	order by rownum desc


	</select>



	<update id="clickCount" statementType="CALLABLE" parameterType="HashMap">

	{
		 call proc_upsert_lecture_click(
						#{no},
						#{ref_member_id}
		)
	}
	</update>

	<select id="rollingLecList" resultMap="bestLectureMap">
	select
			rownum, e.*
	from (select
        		c.ref_lecture_no,
        		l.lecture_name,
        		sum(c.click_no) as clickNo
          from
            	lecture_click c join lecture l
             		on c.ref_lecture_no = l.lecture_no
          group by
            	c.ref_lecture_no, l.lecture_name
          order by
            	clickNo desc) e
	where rownum <![CDATA[ <= ]]> 3

	</select>

	<resultMap type="map" id="bestLectureMap">
		<id column="ref_lecture_no" property="refLectureNo"/>
		<result column="lecture_name" property="lectureName"/>
		<result column="click_no" property="clickNo"/>
	</resultMap>

	<select id="mainSearchResult" resultType="lecture">

    select
    	l.*,
    	round((select avg(lec_assessment) from lecture_comment where ref_lecture_no = l.lecture_no), 1) "avg_lec_assessment",
    	(select teacher_name from teacher where ref_member_id = l.ref_member_id) "teacher_name",
    	(select count(*) from pick where ref_member_id = #{memberId} and ref_lecture_no = l.lecture_no) "picked",
    	(select count(*) from basket where ref_member_id = #{memberId} and ref_lecture_no = l.lecture_no) "basketed"
	from
   		lecture l
	<where>
    	l.lecture_name like '%' || #{searchKeyword} || '%' and l.lecture_accept_yn = 'Y'
    </where>
	order by
    	l.lecture_no desc

	</select>



	<select id="myAllLecture" resultType="lecture">
	select
		lecture_no "lectureNo",
		ref_member_id "refMemberId",
     	lecture_type "lectureType",
     	ref_lec_cat_no "refLecCatNo",
     	lecture_name "lectureName",
     	lecture_accept_yn "lectureAcceptYn"
	from
    	lecture
    where
    	 ref_member_id = #{teacherId}
    order by
    	 lecture_no desc

	</select>

	<select id="getTeacherTotalContents" resultType="_int">
	select
		  count(*)
	 from
		  lecture
	 where
	 		ref_member_id = #{teacherId}
     order by
     		lecture_no desc
	</select>

	<select id="selectLectureProgress" resultMap="progMap">
		select
			ref_lec_chapter_no,
			section_sign_up_yn
		from lecture_progress
		where ref_member_id = #{refMemberId}
			and ref_lecture_no = #{refLectureNo}
		order by ref_lec_chapter_no asc
	</select>

	<resultMap id="progMap" type="map">
		<id column="ref_lec_chapter_no" property="chapterNo"/>
		<result column="section_sign_up_yn" property="yn"/>
	</resultMap>

	<update id="updateProgress">
		update lecture_progress
		set section_sign_up_yn = 'Y'
		where ref_member_id = #{refMemberId}
			and ref_lec_chapter_no = #{chapterNo}
	</update>

	<select id="selectVideoRename" resultType="string">
		select lec_chapter_re_video
		from lecture_chapter
		where lec_chapter_no = #{playPosition}
	</select>
	
	<update id="reApplyLecture">
	update 
    	lecture
	set 
    	lecture_accept_yn ='W'
	where 
    	lecture_no = #{lectureNo}
	
	</update>
	
	<select id="teacherProfileLecture" resultType="lecture">
	select 
	    l.lecture_no,
	    l.lecture_name
	from
	   lecture l
	where
	    ref_member_id = #{memeberId}
	and 
	    lecture_accept_yn = 'Y'
	and  
		rownum <![CDATA[ <= ]]> 3
	order by
	 	l.lecture_no 
	 desc
	</select>

</mapper>